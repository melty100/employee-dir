{"version":3,"sources":["components/Data/employeeData.js","components/Table/index.js","components/Grid/index.js","components/Button/index.js","components/Form/index.js","App.js","reportWebVitals.js","index.js"],"names":["employeeData","firstName","lastName","title","salary","compare","key","a","b","Table","children","class","scope","TableRow","employee","Container","fluid","className","Row","Col","size","split","map","join","Button","type","onClick","id","Form","for","App","useState","employees","setEmployees","handleOnClick","event","preventDefault","target","sort","console","log","minimum","document","getElementById","filtered","filter","emp","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.98f2de42.chunk.js","sourcesContent":["\nexport var employeeData = [\n    {\n        firstName: 'James',\n        lastName: \"Smith\",\n        title: 'Intern',\n        salary: 30000\n    },\n    {\n        firstName: 'John',\n        lastName: 'Snow',\n        title: 'HR Analyst',\n        salary: 50000\n    },\n    {\n        firstName: 'Anniya',\n        lastName: 'Knox',\n        title: 'HR Manager',\n        salary: 100000\n    },\n    {\n        firstName: 'Fynn',\n        lastName: 'Nash',\n        title: 'Training Manager',\n        salary: 85000\n    },\n    {\n        firstName: 'Eben',\n        lastName: 'Combs',\n        title: 'Benefits Manager',\n        salary: 87500\n    },\n    {\n        firstName: 'Tara',\n        lastName: 'Hyde',\n        title: 'Compensation Manager',\n        salary: 90000\n    },\n    {\n        firstName: 'Hibba',\n        lastName: 'Walters',\n        title: 'Regional Human Resource Manager',\n        salary: 200000\n    },\n    {\n        firstName: 'Selina',\n        lastName: 'Morrow',\n        title: 'Recruiter',\n        salary: 50000\n    },\n    {\n        firstName: 'Sorcha',\n        lastName: 'Person',\n        title: 'HR Coordinator',\n        salary: 64000\n    }\n];\n\nexport function compare(key) {\n\n    return function (a, b) {\n        if (a[key] > b[key]) return 1;\n        if (a[key] < b[key]) return -1;\n\n        return 0;\n    }\n};\n\nexport function compareTitle(a, b) {\n    if (a.title > b.title) return 1;\n    if (b.title < b.title) return -1;\n\n    return 0;\n};\n\nexport function compareSalary(a, b) {\n    if (a.salary > b.salary) return 1;\n    if (b.salary < b.salary) return -1;\n\n    return 0;\n};","import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nexport function Table({ children }) {\n    return (\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">First</th>\n                    <th scope=\"col\">Last</th>\n                    <th scope=\"col\">Title</th>\n                    <th scope=\"col\">Salary</th>\n                </tr>\n            </thead>\n            <tbody>\n                {children}\n            </tbody>\n        </table>\n    );\n}\n\nexport function TableRow({ employee: { firstName, lastName, title, salary } }) {\n    return (\n        <tr>\n            <td>{firstName}</td>\n            <td>{lastName}</td>\n            <td>{title}</td>\n            <td>{salary}</td>\n        </tr>\n    );\n}","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\n\n// Destructuring the type, className, children and onClick props, applying them to the button element\nfunction Button({ type = \"default\", className, children, onClick, id }) {\n  return (\n    <button id={id} onClick={onClick} className={[\"btn btn-lg\", `btn-${type}`, className].join(\" \")}>\n      {children}\n    </button>\n  );\n}\n\nexport default Button;","import React from \"react\";\nimport Button from \"../Button\";\n\n\nexport function Form({ type = \"default\", className, children, onClick, id }) {\n\n\n    return (\n        <form>\n            <div class=\"form-group mt-5\">\n                <label for=\"FilterBySalary\">Enter Minimum Salary</label>\n                <input type=\"number\" class=\"form-control\" id=\"FormControl\"/>\n            </div>\n            <Button\n            onClick={onClick}\n            type={type}\n            className={className}\n            id={id}>Filter</Button>\n        </form>\n    ); \n}\n\nexport default Form;","\nimport React, { useState } from \"react\";\nimport { employeeData, compare, compareTitle, compareSalary } from \"./components/Data/employeeData\"\nimport { Table, TableRow } from './components/Table/index';\nimport { Container, Row, Col } from \"./components/Grid/index\";\nimport Form from \"./components/Form\";\nimport Button from \"./components/Button\";\n\nfunction App() {\n\n  const [employees, setEmployees] = useState([...employeeData]);\n\n  const handleOnClick = event => {\n\n    event.preventDefault();\n    var id = event.target.id;\n    switch(id){\n      case \"by-name\":\n        setEmployees([...employees.sort(compare('lastName'))]);\n        break;\n      case \"by-title\":\n        setEmployees([...employees.sort(compare('title'))]);\n        console.log([...employees.sort(compare('title'))]);\n        break;\n      case \"by-salary\":\n        setEmployees([...employees.sort(compare('salary'))]);\n        console.log([...employees.sort(compare('salary'))]);\n        break;\n      case \"filter\":\n        let minimum = document.getElementById(\"FormControl\");\n        let filtered = [...employees.filter((emp) => {return emp.salary >= minimum.value})];\n        setEmployees(filtered);\n        console.log(filtered);\n      case \"restore\":\n        setEmployees([...employeeData]);\n        break;\n    }\n  }\n\n  return (\n    <Container>\n      <h1 class=\"text-center mt-5 mb-5\"> Employee Directory </h1>\n      <Row>\n        <Col size=\"md-12\">\n          <Table> {employees.map((emp) => { return <TableRow employee={emp} />; })}  </Table>\n        </Col>\n      </Row>\n      <Row>\n        <Col size=\"md\">\n        <Button\n            onClick={handleOnClick}\n            type=\"success\"\n            className=\"input-lg\"\n            id=\"by-name\">Sort by Name</Button>\n        </Col>\n        <Col size=\"md\">\n        <Button\n            onClick={handleOnClick}\n            type=\"success\"\n            className=\"input-lg\"\n            id=\"by-title\"> Sort by Title</Button>\n        </Col>\n        <Col size=\"md\">\n        <Button\n            onClick={handleOnClick}\n            type=\"success\"\n            className=\"input-lg\"\n            id=\"by-salary\"> Sort by Salary</Button>\n        </Col>\n        <Col size=\"md\">\n        <Button\n            onClick={handleOnClick}\n            type=\"success\"\n            className=\"input-lg\"\n            id=\"restore\">Restore List</Button>\n        </Col>\n      </Row>\n      <Row>\n        <Col size=\"md-3\">\n          <Form\n          onClick={handleOnClick}\n          type=\"success\"\n          className=\"input-lg\"\n          id=\"filter\"></Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}